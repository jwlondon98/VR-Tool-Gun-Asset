//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Misc Assets/XR/OculusTouchController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @OculusTouchController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @OculusTouchController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""OculusTouchController"",
    ""maps"": [
        {
            ""name"": ""RightController"",
            ""id"": ""36e0376c-e973-4abd-a27a-eef4d101ff44"",
            ""actions"": [
                {
                    ""name"": ""A_Button"",
                    ""type"": ""Button"",
                    ""id"": ""cc54afa0-792b-428c-a42a-7a94de523d59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B_Button"",
                    ""type"": ""Button"",
                    ""id"": ""75de530f-3e5b-45fe-b285-75c7fdd5b20d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""416a1905-f1a4-430b-a64e-f1e03553f446"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""686e5361-0c6b-4985-99e1-9a73f48cc17a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick_X"",
                    ""type"": ""Value"",
                    ""id"": ""68c02b82-9d2d-42a3-802d-70789b8cfcd9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick_Y"",
                    ""type"": ""Value"",
                    ""id"": ""57b8bb62-ee2c-4aa8-b4a4-e0334904c877"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick_Click"",
                    ""type"": ""Button"",
                    ""id"": ""888d0153-035a-4457-a670-6da2f278389c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger_Value"",
                    ""type"": ""Value"",
                    ""id"": ""c02512f2-4035-445e-999d-797d7841e4aa"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip_Value"",
                    ""type"": ""Value"",
                    ""id"": ""addee773-2f1b-457e-a20d-6862c10a3821"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""74c99b8b-5c2e-419b-93eb-e0014f4b5a40"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""d024d52c-27bf-4052-aa34-964c6ca1fda3"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking_State"",
                    ""type"": ""Value"",
                    ""id"": ""8963fb11-0eef-4400-87c4-93cba590e11a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is_Tracked"",
                    ""type"": ""Value"",
                    ""id"": ""27f4a5aa-dfef-41cd-b3d2-f04ed77896a4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc86cc69-d2d0-484a-b069-9a5362b7ae19"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2fa39ce-15f3-41ad-b965-fdbeea1d55d5"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b8e74e9-30a4-41df-a773-2a264606faf1"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""486265ea-c8a7-460d-a053-4ac833cb70a3"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1c12bdf-6822-4765-aa25-e14378840e2a"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0443832-0c79-40fd-9e24-1f31b0d183e7"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0549c028-79f0-48af-bc4b-d2ebc30f8bce"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f345075-3cff-4e33-96bc-52c146fd88c3"",
                    ""path"": ""<OculusTouchController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger_Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba582937-f6db-40ae-acbf-61015a4073e4"",
                    ""path"": ""<OculusTouchController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip_Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ffac8d6-05ff-4c41-85c6-164f369cd712"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91c058f7-718d-4b00-ae9d-f1d598e0e64c"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f35ccdd-bd87-4157-a3b4-909cc57e4b18"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking_State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d96206bf-75e5-41c2-bc19-17c8fe31d5dd"",
                    ""path"": ""<XRController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is_Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LeftController"",
            ""id"": ""513b3fc5-263a-4a49-b1bb-27e6c229e81d"",
            ""actions"": [
                {
                    ""name"": ""X_Button"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ee37eb11-096f-43e8-b0e8-06a0e87ac7df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y_Button"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f28a42b1-688c-4ea4-9ff5-cab193c48c65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""94077739-b1fa-4393-8717-17867dffff57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""77fdb0ad-b8a8-4923-99bd-c639df2f2d0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick_X"",
                    ""type"": ""Value"",
                    ""id"": ""90c24e3a-712a-4563-952e-aaa3abd0d6a7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick_Y"",
                    ""type"": ""Value"",
                    ""id"": ""54f7550d-cc15-40ea-aeeb-49a73491510b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick_Click"",
                    ""type"": ""Button"",
                    ""id"": ""c2e19038-b71e-48a2-9040-26f7d3080c28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger_Value"",
                    ""type"": ""Value"",
                    ""id"": ""30d08b6e-0d7e-4e3c-94c8-b08931a415e7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip_Value"",
                    ""type"": ""Value"",
                    ""id"": ""eb4a0690-5ff1-4316-8833-37f56f4f0cd4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""006225c8-8a35-4bc2-ba76-18fb4e5ac56d"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""45853dee-65aa-4c8f-9d82-cc0c23cc1438"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking_State"",
                    ""type"": ""Value"",
                    ""id"": ""5973e13a-076c-4fe9-95e8-1a2b978036d6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is_Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""11c8053a-1c51-4e4c-9e91-a513b41f698d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""436a9407-94f3-4c75-8f87-e8728b0a6785"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89dadd59-5149-4fe5-9e61-36c0864a5275"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f6899b1-19e3-417b-b4bf-a557aebd9335"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af4081b1-2947-496f-9f19-06ba9ca55bb0"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fff8ec4d-843c-4ab3-902c-2b7594047cb1"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""906fa912-d5c3-42a3-b51a-c8ba6d7b4590"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b763a7e3-7007-4320-ae21-abce94e31285"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick_Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21722e31-3e1b-4ec6-8c60-c5236e6bd20f"",
                    ""path"": ""<OculusTouchController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger_Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa0938f7-30c7-4cd5-85fb-dafe4742c33c"",
                    ""path"": ""<OculusTouchController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip_Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94fe2054-73f6-4475-a2c0-2f26f4bb9887"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""662f4e97-1919-4a4a-9cad-eaef991ac1b0"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d73d29d9-914e-4e08-a268-6aeb559c0941"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking_State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7a15f7e-c362-4905-8ff8-c852c507caa3"",
                    ""path"": ""<XRController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is_Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // RightController
        m_RightController = asset.FindActionMap("RightController", throwIfNotFound: true);
        m_RightController_A_Button = m_RightController.FindAction("A_Button", throwIfNotFound: true);
        m_RightController_B_Button = m_RightController.FindAction("B_Button", throwIfNotFound: true);
        m_RightController_Trigger = m_RightController.FindAction("Trigger", throwIfNotFound: true);
        m_RightController_Grip = m_RightController.FindAction("Grip", throwIfNotFound: true);
        m_RightController_Joystick_X = m_RightController.FindAction("Joystick_X", throwIfNotFound: true);
        m_RightController_Joystick_Y = m_RightController.FindAction("Joystick_Y", throwIfNotFound: true);
        m_RightController_Joystick_Click = m_RightController.FindAction("Joystick_Click", throwIfNotFound: true);
        m_RightController_Trigger_Value = m_RightController.FindAction("Trigger_Value", throwIfNotFound: true);
        m_RightController_Grip_Value = m_RightController.FindAction("Grip_Value", throwIfNotFound: true);
        m_RightController_Position = m_RightController.FindAction("Position", throwIfNotFound: true);
        m_RightController_Rotation = m_RightController.FindAction("Rotation", throwIfNotFound: true);
        m_RightController_Tracking_State = m_RightController.FindAction("Tracking_State", throwIfNotFound: true);
        m_RightController_Is_Tracked = m_RightController.FindAction("Is_Tracked", throwIfNotFound: true);
        // LeftController
        m_LeftController = asset.FindActionMap("LeftController", throwIfNotFound: true);
        m_LeftController_X_Button = m_LeftController.FindAction("X_Button", throwIfNotFound: true);
        m_LeftController_Y_Button = m_LeftController.FindAction("Y_Button", throwIfNotFound: true);
        m_LeftController_Trigger = m_LeftController.FindAction("Trigger", throwIfNotFound: true);
        m_LeftController_Grip = m_LeftController.FindAction("Grip", throwIfNotFound: true);
        m_LeftController_Joystick_X = m_LeftController.FindAction("Joystick_X", throwIfNotFound: true);
        m_LeftController_Joystick_Y = m_LeftController.FindAction("Joystick_Y", throwIfNotFound: true);
        m_LeftController_Joystick_Click = m_LeftController.FindAction("Joystick_Click", throwIfNotFound: true);
        m_LeftController_Trigger_Value = m_LeftController.FindAction("Trigger_Value", throwIfNotFound: true);
        m_LeftController_Grip_Value = m_LeftController.FindAction("Grip_Value", throwIfNotFound: true);
        m_LeftController_Position = m_LeftController.FindAction("Position", throwIfNotFound: true);
        m_LeftController_Rotation = m_LeftController.FindAction("Rotation", throwIfNotFound: true);
        m_LeftController_Tracking_State = m_LeftController.FindAction("Tracking_State", throwIfNotFound: true);
        m_LeftController_Is_Tracked = m_LeftController.FindAction("Is_Tracked", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RightController
    private readonly InputActionMap m_RightController;
    private IRightControllerActions m_RightControllerActionsCallbackInterface;
    private readonly InputAction m_RightController_A_Button;
    private readonly InputAction m_RightController_B_Button;
    private readonly InputAction m_RightController_Trigger;
    private readonly InputAction m_RightController_Grip;
    private readonly InputAction m_RightController_Joystick_X;
    private readonly InputAction m_RightController_Joystick_Y;
    private readonly InputAction m_RightController_Joystick_Click;
    private readonly InputAction m_RightController_Trigger_Value;
    private readonly InputAction m_RightController_Grip_Value;
    private readonly InputAction m_RightController_Position;
    private readonly InputAction m_RightController_Rotation;
    private readonly InputAction m_RightController_Tracking_State;
    private readonly InputAction m_RightController_Is_Tracked;
    public struct RightControllerActions
    {
        private @OculusTouchController m_Wrapper;
        public RightControllerActions(@OculusTouchController wrapper) { m_Wrapper = wrapper; }
        public InputAction @A_Button => m_Wrapper.m_RightController_A_Button;
        public InputAction @B_Button => m_Wrapper.m_RightController_B_Button;
        public InputAction @Trigger => m_Wrapper.m_RightController_Trigger;
        public InputAction @Grip => m_Wrapper.m_RightController_Grip;
        public InputAction @Joystick_X => m_Wrapper.m_RightController_Joystick_X;
        public InputAction @Joystick_Y => m_Wrapper.m_RightController_Joystick_Y;
        public InputAction @Joystick_Click => m_Wrapper.m_RightController_Joystick_Click;
        public InputAction @Trigger_Value => m_Wrapper.m_RightController_Trigger_Value;
        public InputAction @Grip_Value => m_Wrapper.m_RightController_Grip_Value;
        public InputAction @Position => m_Wrapper.m_RightController_Position;
        public InputAction @Rotation => m_Wrapper.m_RightController_Rotation;
        public InputAction @Tracking_State => m_Wrapper.m_RightController_Tracking_State;
        public InputAction @Is_Tracked => m_Wrapper.m_RightController_Is_Tracked;
        public InputActionMap Get() { return m_Wrapper.m_RightController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightControllerActions set) { return set.Get(); }
        public void SetCallbacks(IRightControllerActions instance)
        {
            if (m_Wrapper.m_RightControllerActionsCallbackInterface != null)
            {
                @A_Button.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnA_Button;
                @A_Button.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnA_Button;
                @A_Button.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnA_Button;
                @B_Button.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnB_Button;
                @B_Button.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnB_Button;
                @B_Button.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnB_Button;
                @Trigger.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger;
                @Grip.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip;
                @Joystick_X.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_X.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_X.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_Y.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Y.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Y.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Click.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Click;
                @Joystick_Click.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Click;
                @Joystick_Click.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnJoystick_Click;
                @Trigger_Value.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger_Value;
                @Trigger_Value.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger_Value;
                @Trigger_Value.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTrigger_Value;
                @Grip_Value.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip_Value;
                @Grip_Value.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip_Value;
                @Grip_Value.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnGrip_Value;
                @Position.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnRotation;
                @Tracking_State.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTracking_State;
                @Tracking_State.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTracking_State;
                @Tracking_State.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnTracking_State;
                @Is_Tracked.started -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnIs_Tracked;
                @Is_Tracked.performed -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnIs_Tracked;
                @Is_Tracked.canceled -= m_Wrapper.m_RightControllerActionsCallbackInterface.OnIs_Tracked;
            }
            m_Wrapper.m_RightControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @A_Button.started += instance.OnA_Button;
                @A_Button.performed += instance.OnA_Button;
                @A_Button.canceled += instance.OnA_Button;
                @B_Button.started += instance.OnB_Button;
                @B_Button.performed += instance.OnB_Button;
                @B_Button.canceled += instance.OnB_Button;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Joystick_X.started += instance.OnJoystick_X;
                @Joystick_X.performed += instance.OnJoystick_X;
                @Joystick_X.canceled += instance.OnJoystick_X;
                @Joystick_Y.started += instance.OnJoystick_Y;
                @Joystick_Y.performed += instance.OnJoystick_Y;
                @Joystick_Y.canceled += instance.OnJoystick_Y;
                @Joystick_Click.started += instance.OnJoystick_Click;
                @Joystick_Click.performed += instance.OnJoystick_Click;
                @Joystick_Click.canceled += instance.OnJoystick_Click;
                @Trigger_Value.started += instance.OnTrigger_Value;
                @Trigger_Value.performed += instance.OnTrigger_Value;
                @Trigger_Value.canceled += instance.OnTrigger_Value;
                @Grip_Value.started += instance.OnGrip_Value;
                @Grip_Value.performed += instance.OnGrip_Value;
                @Grip_Value.canceled += instance.OnGrip_Value;
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @Tracking_State.started += instance.OnTracking_State;
                @Tracking_State.performed += instance.OnTracking_State;
                @Tracking_State.canceled += instance.OnTracking_State;
                @Is_Tracked.started += instance.OnIs_Tracked;
                @Is_Tracked.performed += instance.OnIs_Tracked;
                @Is_Tracked.canceled += instance.OnIs_Tracked;
            }
        }
    }
    public RightControllerActions @RightController => new RightControllerActions(this);

    // LeftController
    private readonly InputActionMap m_LeftController;
    private ILeftControllerActions m_LeftControllerActionsCallbackInterface;
    private readonly InputAction m_LeftController_X_Button;
    private readonly InputAction m_LeftController_Y_Button;
    private readonly InputAction m_LeftController_Trigger;
    private readonly InputAction m_LeftController_Grip;
    private readonly InputAction m_LeftController_Joystick_X;
    private readonly InputAction m_LeftController_Joystick_Y;
    private readonly InputAction m_LeftController_Joystick_Click;
    private readonly InputAction m_LeftController_Trigger_Value;
    private readonly InputAction m_LeftController_Grip_Value;
    private readonly InputAction m_LeftController_Position;
    private readonly InputAction m_LeftController_Rotation;
    private readonly InputAction m_LeftController_Tracking_State;
    private readonly InputAction m_LeftController_Is_Tracked;
    public struct LeftControllerActions
    {
        private @OculusTouchController m_Wrapper;
        public LeftControllerActions(@OculusTouchController wrapper) { m_Wrapper = wrapper; }
        public InputAction @X_Button => m_Wrapper.m_LeftController_X_Button;
        public InputAction @Y_Button => m_Wrapper.m_LeftController_Y_Button;
        public InputAction @Trigger => m_Wrapper.m_LeftController_Trigger;
        public InputAction @Grip => m_Wrapper.m_LeftController_Grip;
        public InputAction @Joystick_X => m_Wrapper.m_LeftController_Joystick_X;
        public InputAction @Joystick_Y => m_Wrapper.m_LeftController_Joystick_Y;
        public InputAction @Joystick_Click => m_Wrapper.m_LeftController_Joystick_Click;
        public InputAction @Trigger_Value => m_Wrapper.m_LeftController_Trigger_Value;
        public InputAction @Grip_Value => m_Wrapper.m_LeftController_Grip_Value;
        public InputAction @Position => m_Wrapper.m_LeftController_Position;
        public InputAction @Rotation => m_Wrapper.m_LeftController_Rotation;
        public InputAction @Tracking_State => m_Wrapper.m_LeftController_Tracking_State;
        public InputAction @Is_Tracked => m_Wrapper.m_LeftController_Is_Tracked;
        public InputActionMap Get() { return m_Wrapper.m_LeftController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftControllerActions set) { return set.Get(); }
        public void SetCallbacks(ILeftControllerActions instance)
        {
            if (m_Wrapper.m_LeftControllerActionsCallbackInterface != null)
            {
                @X_Button.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnX_Button;
                @X_Button.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnX_Button;
                @X_Button.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnX_Button;
                @Y_Button.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnY_Button;
                @Y_Button.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnY_Button;
                @Y_Button.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnY_Button;
                @Trigger.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger;
                @Grip.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip;
                @Joystick_X.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_X.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_X.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_X;
                @Joystick_Y.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Y.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Y.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Y;
                @Joystick_Click.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Click;
                @Joystick_Click.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Click;
                @Joystick_Click.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnJoystick_Click;
                @Trigger_Value.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger_Value;
                @Trigger_Value.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger_Value;
                @Trigger_Value.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTrigger_Value;
                @Grip_Value.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip_Value;
                @Grip_Value.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip_Value;
                @Grip_Value.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnGrip_Value;
                @Position.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnRotation;
                @Tracking_State.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTracking_State;
                @Tracking_State.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTracking_State;
                @Tracking_State.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnTracking_State;
                @Is_Tracked.started -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnIs_Tracked;
                @Is_Tracked.performed -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnIs_Tracked;
                @Is_Tracked.canceled -= m_Wrapper.m_LeftControllerActionsCallbackInterface.OnIs_Tracked;
            }
            m_Wrapper.m_LeftControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @X_Button.started += instance.OnX_Button;
                @X_Button.performed += instance.OnX_Button;
                @X_Button.canceled += instance.OnX_Button;
                @Y_Button.started += instance.OnY_Button;
                @Y_Button.performed += instance.OnY_Button;
                @Y_Button.canceled += instance.OnY_Button;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Joystick_X.started += instance.OnJoystick_X;
                @Joystick_X.performed += instance.OnJoystick_X;
                @Joystick_X.canceled += instance.OnJoystick_X;
                @Joystick_Y.started += instance.OnJoystick_Y;
                @Joystick_Y.performed += instance.OnJoystick_Y;
                @Joystick_Y.canceled += instance.OnJoystick_Y;
                @Joystick_Click.started += instance.OnJoystick_Click;
                @Joystick_Click.performed += instance.OnJoystick_Click;
                @Joystick_Click.canceled += instance.OnJoystick_Click;
                @Trigger_Value.started += instance.OnTrigger_Value;
                @Trigger_Value.performed += instance.OnTrigger_Value;
                @Trigger_Value.canceled += instance.OnTrigger_Value;
                @Grip_Value.started += instance.OnGrip_Value;
                @Grip_Value.performed += instance.OnGrip_Value;
                @Grip_Value.canceled += instance.OnGrip_Value;
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @Tracking_State.started += instance.OnTracking_State;
                @Tracking_State.performed += instance.OnTracking_State;
                @Tracking_State.canceled += instance.OnTracking_State;
                @Is_Tracked.started += instance.OnIs_Tracked;
                @Is_Tracked.performed += instance.OnIs_Tracked;
                @Is_Tracked.canceled += instance.OnIs_Tracked;
            }
        }
    }
    public LeftControllerActions @LeftController => new LeftControllerActions(this);
    public interface IRightControllerActions
    {
        void OnA_Button(InputAction.CallbackContext context);
        void OnB_Button(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnJoystick_X(InputAction.CallbackContext context);
        void OnJoystick_Y(InputAction.CallbackContext context);
        void OnJoystick_Click(InputAction.CallbackContext context);
        void OnTrigger_Value(InputAction.CallbackContext context);
        void OnGrip_Value(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTracking_State(InputAction.CallbackContext context);
        void OnIs_Tracked(InputAction.CallbackContext context);
    }
    public interface ILeftControllerActions
    {
        void OnX_Button(InputAction.CallbackContext context);
        void OnY_Button(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnJoystick_X(InputAction.CallbackContext context);
        void OnJoystick_Y(InputAction.CallbackContext context);
        void OnJoystick_Click(InputAction.CallbackContext context);
        void OnTrigger_Value(InputAction.CallbackContext context);
        void OnGrip_Value(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTracking_State(InputAction.CallbackContext context);
        void OnIs_Tracked(InputAction.CallbackContext context);
    }
}
